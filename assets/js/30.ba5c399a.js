(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{494:function(e,s,a){"use strict";a.r(s);var t=a(6),r=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"regexp-no-dupe-characters-character-class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regexp-no-dupe-characters-character-class"}},[e._v("#")]),e._v(" regexp/no-dupe-characters-character-class")]),e._v(" "),a("blockquote",[a("p",[e._v("disallow duplicate characters in the RegExp character class")])]),e._v(" "),a("ul",[a("li",[e._v("⚙️ This rule is included in "),a("code",[e._v('"plugin:regexp/recommended"')]),e._v(".")])]),e._v(" "),a("p",[e._v("Because multiple same character classes in regular expressions only one is useful, they might be typing mistakes.")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("\\\\(\\\\)")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("h2",{attrs:{id:"rule-details"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rule-details"}},[e._v("#")]),e._v(" 📖 Rule Details")]),e._v(" "),a("p",[e._v("This rule disallows duplicate characters in the RegExp character class.")]),e._v(" "),a("eslint-code-block",[a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('/* eslint regexp/no-dupe-characters-character-class: "error" */')]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/* ✓ GOOD */")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("[\\(\\)]")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("[a-z\\s]")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("[\\w]")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/* ✗ BAD */")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("[\\\\(\\\\)]")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('//          ^^ ^^        "\\\\" are duplicated')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("[a-z\\\\s]")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('//          ^^^  ^       "s" are duplicated')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("[\\w0-9]")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('//          ^^^^^        "0-9" are duplicated')]),e._v("\n")])])])]),e._v(" "),a("h2",{attrs:{id:"options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[e._v("#")]),e._v(" 🔧 Options")]),e._v(" "),a("p",[e._v("Nothing.")]),e._v(" "),a("h2",{attrs:{id:"version"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#version"}},[e._v("#")]),e._v(" 🚀 Version")]),e._v(" "),a("p",[e._v("This rule was introduced in eslint-plugin-regexp v0.1.0")]),e._v(" "),a("h2",{attrs:{id:"implementation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[e._v("#")]),e._v(" 🔍 Implementation")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/ota-meshi/eslint-plugin-regexp/blob/master/lib/rules/no-dupe-characters-character-class.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("Rule source"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/ota-meshi/eslint-plugin-regexp/blob/master/tests/lib/rules/no-dupe-characters-character-class.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("Test source"),a("OutboundLink")],1)])])],1)}),[],!1,null,null,null);s.default=r.exports}}]);